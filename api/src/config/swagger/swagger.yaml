openapi: 3.0.0
info:
  title: HAE Management API
  description: API for managing HAE and administrative functions
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: Local development server

components:
  schemas:
    HAE:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        status:
          type: string
          enum: [PENDING, APPROVED, REJECTED, COMPLETED]
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        employeeId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    RoleChange:
      type: object
      properties:
        role:
          type: string
          enum: [PROFESSOR, COORDENADOR]
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token

tags:
  - name: Auth
    description: Authentication operations
  - name: Employee
    description: Employee management
  - name: HAE
    description: HAE (Horário de Atendimento Especial) management
  - name: Admin
    description: Administrative functions

paths:
  /auth/send-email-code:
    post:
      summary: Send confirmation email
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "João Pedro"
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: senha123
      responses:
        200:
          description: Confirmation email sent successfully
        500:
          description: Failed to send confirmation email

  /auth/verify-email-code:
    post:
      summary: Verify email confirmation code
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                code:
                  type: string
                  example: "123456"
      responses:
        200:
          description: Code verified successfully
        400:
          description: Invalid or expired code
        500:
          description: Internal server error

  /auth/login:
    post:
      summary: Employee login
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Login successful
        401:
          description: Invalid credentials

  /employee/get-professor/{id}:
    get:
      summary: Retrieve professor information by ID
      tags:
        - Employee
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Professor ID
          schema:
            type: string
      responses:
        200:
          description: Professor information retrieved successfully
        401:
          description: Unauthorized – invalid or missing token
        404:
          description: Professor not found

  /employee/delete-account/{id}:
    delete:
      summary: Delete professor account by ID
      tags:
        - Employee
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Account ID
          schema:
            type: string
      responses:
        200:
          description: Account deleted successfully
        404:
          description: Account not found

  /employee/update-account/{id}:
    put:
      summary: Update professor account information
      tags:
        - Employee
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Account ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                email:
                  type: string
      responses:
        200:
          description: Account updated successfully
        404:
          description: Account not found

  /hae/change-status/{id}:
    put:
      summary: Change HAE status
      tags:
        - HAE
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: HAE ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                haeStatus:
                  type: string
                  enum: [PENDING, APPROVED, REJECTED, COMPLETED]
                  example: APPROVED
      responses:
        200:
          description: HAE status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "HAE status updated"
        400:
          description: Invalid HAE status
        401:
          description: Unauthorized – invalid or missing token
        500:
          description: Internal server error

  /admin/change-role/{id}:
    put:
      summary: Change employee role to Coordenador
      tags:
        - Admin
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Employee ID
          schema:
            type: string
      responses:
        200:
          description: Role changed successfully
        401:
          description: Unauthorized – invalid or missing token
        403:
          description: Forbidden – insufficient permissions
        404:
          description: Employee not found
        500:
          description: Internal server error