name: Security Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  security:
    name: Security Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # BACKEND
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build API with Maven
        working-directory: ./api
        run: ./mvnw clean install -DskipTests

      - name: Run Hadolint (API Dockerfile)
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./api/Dockerfile

      - name: Build API Docker image
        working-directory: ./api
        run: docker build -t nickolss/apijavahae:local .

      - name: Scan API image with Trivy
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: nickolss/apijavahae:local
          format: 'table'
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      # FRONTEND
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: ./front/package-lock.json

      - name: Install deps (front)
        working-directory: ./front
        run: npm ci

      - name: Lint front (ESLint)
        working-directory: ./front
        run: npm run lint

      - name: Run Hadolint (Front Dockerfile)
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./front/Dockerfile

      - name: Build Front Docker image
        working-directory: ./front
        run: docker build -t nickolss/fronthae:local .

      - name: Scan Front image with Trivy
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: nickolss/fronthae:local
          format: 'table'
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'